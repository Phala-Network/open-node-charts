# nodeType is the type of this open node instance, should be one of full, rpc, bootstrap, collator
nodeType: full

replicaCount: 1

image:
  repository: phalanetwork/khala-dev-node
  pullPolicy: IfNotPresent
  tag: latest-healthcheck

command: 
- /root/khala-node

args:
  para:
  - --chain=/root/thala-local-2004-raw.chain_spec.json
  - --pruning=archive
  - --state-cache-size=671088640
  - --db-cache=2048
  - --max-runtime-instances=16
  relay:
  - --chain=/root/rococo-local-raw.chain_spec.json
  - --pruning=256
  - --state-cache-size=671088640
  - --db-cache=2048
  - --max-runtime-instances=16

dataPath: /data

dataVolume:
  storageClassName: ""
  initialSize: 20Gi

port:
  p2p:
    para: 30333
    relay: 30334
  rpc:
    http: 9933
    ws: 9944

ingress:
  certmanager:
    createCertIssuer: true
    # Namespace where cert-manager runs in.
    namespace: "cert-manager"
  letsencrypt:
    # ACME v2 production endpoint of Let's Encrypt.
    serverURL: "https://acme-v02.api.letsencrypt.org/directory"
    # The e-mail address for receiving overdue-cert notification from Let's Encrypt.
    email: "opennode-dev@phala.network"
  cloudflare:
    email: "opennode-dev@phala.network"
    # The api-key for accessing cloud flare api.
    apiKey: "open-node-api-key"
  http:
    domain: ""
  ws:
    # The domain name of websocket RPC ingress forwarding rule.
    domain: ""

livenessProbe:
  failureThreshold: 3
  exec:
    command:
    - curl
    - -f
    - -H
    - "Content-Type: application/json"
    - -d
    - '{"id":1, "jsonrpc":"2.0", "method": "system_health"}'
    - http://localhost:9933/
  initialDelaySeconds: 10
  periodSeconds: 10

readinessProbe:
  failureThreshold: 3
  exec:
    command:
    - sh
    - /root/health.sh
  initialDelaySeconds: 10
  periodSeconds: 10

resources:
  requests:
    cpu: "2"
    memory: "2Gi"
  limits:
    cpu: "2"
    memory: "2Gi"

podAnnotations: {}

imagePullSecrets: []

podSecurityContext: {}

securityContext: {}

nodeSelector: {}

tolerations: []

affinity: {}
